/*
 * This file was generated by the Gradle "init" task.
 */
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
plugins {
//    id "io.freefair.lombok" version "5.0.0-rc6"
//    id "org.springframework.boot" version "2.1.6.RELEASE"
    kotlin("jvm")
    kotlin("plugin.spring")
    kotlin("plugin.jpa")
    war
    id("org.springframework.boot")
    id("io.spring.dependency-management")
    id("org.jetbrains.kotlin.plugin.allopen")
    id("org.jetbrains.kotlin.kapt")
}


val developmentOnly by configurations.creating
configurations {
    runtimeClasspath {
        extendsFrom(developmentOnly)
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web:2.1.6.RELEASE")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:2.1.6.RELEASE")
    implementation("net.coobird:thumbnailator:0.4.8")
    implementation("org.springframework.boot:spring-boot-starter-security:2.1.6.RELEASE")
    implementation("com.github.paulcwarren:spring-content-fs-boot-starter:0.12.0")
    implementation("com.github.paulcwarren:spring-content-rest-boot-starter:0.12.0")
//    implementation("org.springframework.boot:spring-boot-configuration-processor:2.1.6.RELEASE")
//    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    implementation("com.google.guava:guava:28.1-jre")
    runtimeOnly("com.h2database:h2:1.4.199")
//    developmentOnly("org.springframework.boot:spring-boot-devtools")
    developmentOnly("org.springframework.boot:spring-boot-devtools:2.1.6.RELEASE")
    testImplementation("com.jayway.restassured:rest-assured:2.3.4")
    testImplementation("com.github.paulcwarren:ginkgo4j:1.0.10")
    testImplementation("org.springframework.boot:spring-boot-starter-test:2.1.6.RELEASE")
    testImplementation("org.springframework.security:spring-security-test:5.1.5.RELEASE")
//    compileOnly("org.projectlombok:lombok:1.18.8")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    kapt("org.springframework.boot:spring-boot-configuration-processor")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("com.maxmind.geoip2:geoip2:2.13.1")
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

}

description = "angle-chan-server"
repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
}
//
//compileKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//        freeCompilerArgs = listOf("-Xjsr305=strict")
//    }
//}
//compileTestKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//        freeCompilerArgs = listOf("-Xjsr305=strict")
//    }
//}
kapt {
    correctErrorTypes = true
}
task("runSpring") {
    dependsOn("bootRun")
}
task("serveBoot") {
    dependsOn(":angle-chan-client:runBuild", "runSpring")
}
tasks {
    withType<KotlinCompile> {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = listOf("-Xjsr305=strict")
        }
    }

//apply plugin: "kotlin-kapt"



}